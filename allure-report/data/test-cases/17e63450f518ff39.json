{"uid":"17e63450f518ff39","name":"test_add_enterprise_category[payload0-201]","fullName":"test_enterprise_category.TestEnterpriseCategory#test_add_enterprise_category","historyId":"d7e2c02deee153992265a9223b7139b5","time":{"start":1745806108509,"stop":1745806108568,"duration":59},"status":"failed","statusMessage":"AssertionError: assert 405 == 201\n +  where 405 = <Response [405]>.status_code","statusTrace":"self = <test_enterprise_category.TestEnterpriseCategory object at 0x00000286B6D1EE90>\npayload = {'categoryName': '123456', 'createdAt': '2025-04-27T10:10:23.864Z', 'description': '123456', 'parentId': None, ...}\nexpected_code = 201\n\n    @allure.story(\"添加企业内部法规分类\")\n    @pytest.mark.parametrize(\"payload, expected_code\", [\n        (\n            {\n                \"tenantId\": 9007199254740991,\n                \"categoryName\": \"123456\",\n                \"parentId\": None,\n                \"description\": \"123456\",\n                \"createdAt\": \"2025-04-27T10:10:23.864Z\",\n                \"updatedAt\": \"2025-04-27T10:10:23.864Z\"\n            },\n            201   # 假设后端创建成功返回 201 Created\n        )\n    ])\n    def test_add_enterprise_category(self, payload, expected_code):\n        url = f\"{BASE_URL}/whiskerguardregulatoryservice/api/enterprise/categories/create\"\n        response = requests.post(url, json=payload)\n        # 调试输出\n        print(\"调试 URL:\", url)\n        print(\"调试 状态码:\", response.status_code)\n        print(\"调试 返回头:\", response.headers.get(\"Content-Type\"))\n        print(\"调试 返回体:\", response.text[:200])\n        # 正式断言\n>       assert response.status_code == expected_code\nE       assert 405 == 201\nE        +  where 405 = <Response [405]>.status_code\n\ntest_enterprise_category.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 405 == 201\n +  where 405 = <Response [405]>.status_code","statusTrace":"self = <test_enterprise_category.TestEnterpriseCategory object at 0x00000286B6D1EE90>\npayload = {'categoryName': '123456', 'createdAt': '2025-04-27T10:10:23.864Z', 'description': '123456', 'parentId': None, ...}\nexpected_code = 201\n\n    @allure.story(\"添加企业内部法规分类\")\n    @pytest.mark.parametrize(\"payload, expected_code\", [\n        (\n            {\n                \"tenantId\": 9007199254740991,\n                \"categoryName\": \"123456\",\n                \"parentId\": None,\n                \"description\": \"123456\",\n                \"createdAt\": \"2025-04-27T10:10:23.864Z\",\n                \"updatedAt\": \"2025-04-27T10:10:23.864Z\"\n            },\n            201   # 假设后端创建成功返回 201 Created\n        )\n    ])\n    def test_add_enterprise_category(self, payload, expected_code):\n        url = f\"{BASE_URL}/whiskerguardregulatoryservice/api/enterprise/categories/create\"\n        response = requests.post(url, json=payload)\n        # 调试输出\n        print(\"调试 URL:\", url)\n        print(\"调试 状态码:\", response.status_code)\n        print(\"调试 返回头:\", response.headers.get(\"Content-Type\"))\n        print(\"调试 返回体:\", response.text[:200])\n        # 正式断言\n>       assert response.status_code == expected_code\nE       assert 405 == 201\nE        +  where 405 = <Response [405]>.status_code\n\ntest_enterprise_category.py:32: AssertionError","steps":[],"attachments":[{"uid":"6dd48dd3a62f90e8","name":"stdout","source":"6dd48dd3a62f90e8.txt","type":"text/plain","size":384}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"story","value":"添加企业内部法规分类"},{"name":"feature","value":"法律法规管理服务-企业内部制度类别"},{"name":"suite","value":"test_enterprise_category"},{"name":"subSuite","value":"TestEnterpriseCategory"},{"name":"host","value":"PILIZHEN"},{"name":"thread","value":"36236-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_enterprise_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_code","value":"201"},{"name":"payload","value":"{'tenantId': 9007199254740991, 'categoryName': '123456', 'parentId': None, 'description': '123456', 'createdAt': '2025-04-27T10:10:23.864Z', 'updatedAt': '2025-04-27T10:10:23.864Z'}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"17e63450f518ff39.json","parameterValues":["201","{'tenantId': 9007199254740991, 'categoryName': '123456', 'parentId': None, 'description': '123456', 'createdAt': '2025-04-27T10:10:23.864Z', 'updatedAt': '2025-04-27T10:10:23.864Z'}"]}