{"uid":"d7ce62d00047dd4e","name":"test_delete_enterprise_category","fullName":"whiskerguard.regulatory.test_enterprise_category.TestEnterpriseCategory#test_delete_enterprise_category","historyId":"34ac907ddc94ed8246a8dcc0ad996fbb","time":{"start":1745844906324,"stop":1745844906442,"duration":118},"status":"failed","statusMessage":"AssertionError: assert 404 == 204\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <test_enterprise_category.TestEnterpriseCategory object at 0x000001EABAB59E00>\n\n    @allure.story(\"删除企业内部法规分类\")\n    def test_delete_enterprise_category(self):\n        # 先创建一个分类\n        category_id = self.test_add_enterprise_category(build_payload(), 201)\n    \n        url = f\"{BASE_URL}/services/whiskerguardregulatoryservice/api/enterprise/categories/{category_id}\"\n        try:\n            response = requests.delete(url, headers=AUTH_HEADER)\n        except requests.RequestException as e:\n            logging.error(f\"请求异常: {e}\")\n            pytest.fail(f\"请求异常: {e}\")\n    \n        logging.info(f\"URL: {url}\")\n        logging.info(f\"返回码: {response.status_code}\")\n        logging.info(f\"返回体: {response.text}\")\n    \n>       assert response.status_code == 204\nE       assert 404 == 204\nE        +  where 404 = <Response [404]>.status_code\n\nwhiskerguard\\regulatory\\test_enterprise_category.py:137: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 204\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <test_enterprise_category.TestEnterpriseCategory object at 0x000001EABAB59E00>\n\n    @allure.story(\"删除企业内部法规分类\")\n    def test_delete_enterprise_category(self):\n        # 先创建一个分类\n        category_id = self.test_add_enterprise_category(build_payload(), 201)\n    \n        url = f\"{BASE_URL}/services/whiskerguardregulatoryservice/api/enterprise/categories/{category_id}\"\n        try:\n            response = requests.delete(url, headers=AUTH_HEADER)\n        except requests.RequestException as e:\n            logging.error(f\"请求异常: {e}\")\n            pytest.fail(f\"请求异常: {e}\")\n    \n        logging.info(f\"URL: {url}\")\n        logging.info(f\"返回码: {response.status_code}\")\n        logging.info(f\"返回体: {response.text}\")\n    \n>       assert response.status_code == 204\nE       assert 404 == 204\nE        +  where 404 = <Response [404]>.status_code\n\nwhiskerguard\\regulatory\\test_enterprise_category.py:137: AssertionError","steps":[],"attachments":[{"uid":"a007a0f899237a0c","name":"stdout","source":"a007a0f899237a0c.txt","type":"text/plain","size":233}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"story","value":"删除企业内部法规分类"},{"name":"feature","value":"法律法规管理服务-企业内部制度类别"},{"name":"parentSuite","value":"whiskerguard.regulatory"},{"name":"suite","value":"test_enterprise_category"},{"name":"subSuite","value":"TestEnterpriseCategory"},{"name":"host","value":"PILIZHEN"},{"name":"thread","value":"32192-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"whiskerguard.regulatory.test_enterprise_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"d7ce62d00047dd4e.json","parameterValues":[]}