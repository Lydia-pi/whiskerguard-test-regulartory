{"uid":"e443eabfb66c9b32","name":"test_delete_category[14-204]","fullName":"test_enterprise_category.TestEnterpriseCategory#test_delete_category","historyId":"69bf307251871c549f0e6cc0ff05ac76","time":{"start":1745804693038,"stop":1745804693066,"duration":28},"status":"failed","statusMessage":"AssertionError: assert 200 == 204\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <test_enterprise_category.TestEnterpriseCategory object at 0x00000181A4AA2F10>\ncategory_id = 14, expected_code = 204\n\n    @allure.story(\"删除分类\")\n    @pytest.mark.parametrize(\"category_id, expected_code\", [\n        (14, 204)\n    ])\n    def test_delete_category(self, category_id, expected_code):\n        url = f\"{BASE_URL}/whiskerguardregulatoryservice/api/enterprise/categories/delete/{category_id}\"\n        with allure.step(\"发送删除分类请求\"):\n            response = requests.get(url)\n        with allure.step(\"断言响应状态码\"):\n>           assert response.status_code == expected_code\nE           assert 200 == 204\nE            +  where 200 = <Response [200]>.status_code\n\ntest_enterprise_category.py:108: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 200 == 204\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <test_enterprise_category.TestEnterpriseCategory object at 0x00000181A4AA2F10>\ncategory_id = 14, expected_code = 204\n\n    @allure.story(\"删除分类\")\n    @pytest.mark.parametrize(\"category_id, expected_code\", [\n        (14, 204)\n    ])\n    def test_delete_category(self, category_id, expected_code):\n        url = f\"{BASE_URL}/whiskerguardregulatoryservice/api/enterprise/categories/delete/{category_id}\"\n        with allure.step(\"发送删除分类请求\"):\n            response = requests.get(url)\n        with allure.step(\"断言响应状态码\"):\n>           assert response.status_code == expected_code\nE           assert 200 == 204\nE            +  where 200 = <Response [200]>.status_code\n\ntest_enterprise_category.py:108: AssertionError","steps":[{"name":"发送删除分类请求","time":{"start":1745804693038,"stop":1745804693066,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"断言响应状态码","time":{"start":1745804693066,"stop":1745804693066,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 200 == 204\n +  where 200 = <Response [200]>.status_code\n","statusTrace":"  File \"C:\\Users\\piliz\\AI_test_platform\\test_enterprise_category.py\", line 108, in test_delete_category\n    assert response.status_code == expected_code\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"story","value":"删除分类"},{"name":"feature","value":"法律法规管理服务-企业内部制度类别"},{"name":"suite","value":"test_enterprise_category"},{"name":"subSuite","value":"TestEnterpriseCategory"},{"name":"host","value":"PILIZHEN"},{"name":"thread","value":"26588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_enterprise_category"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"category_id","value":"14"},{"name":"expected_code","value":"204"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fc17bc15bcbd723a","status":"failed","statusDetails":"AssertionError: assert 200 == 204\n +  where 200 = <Response [200]>.status_code","time":{"start":1745804612121,"stop":1745804612147,"duration":26}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"e443eabfb66c9b32.json","parameterValues":["14","204"]}