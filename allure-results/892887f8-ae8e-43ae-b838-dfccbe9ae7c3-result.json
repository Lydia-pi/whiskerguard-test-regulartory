{"name": "test_add_enterprise_category[payload0-500]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 405 == 500\n +  where 405 = <Response [405]>.status_code", "trace": "self = <test_enterprise_category.TestEnterpriseCategory object at 0x000001D82DD43250>\npayload = {'categoryName': '123456', 'createdAt': '2025-04-27T10:10:23.864Z', 'description': '123456', 'parentId': None, ...}\nexpected_code = 500\n\n    @allure.story(\"添加企业内部法规分类\")\n    @pytest.mark.parametrize(\"payload, expected_code\", [\n        ({\n            \"tenantId\": 9007199254740991,\n            \"categoryName\": \"123456\",\n            \"parentId\": None,\n            \"description\": \"123456\",\n            \"createdAt\": \"2025-04-27T10:10:23.864Z\",\n            \"updatedAt\": \"2025-04-27T10:10:23.864Z\"\n        }, 500)  # 示例响应为500，实际应为200，视后端实现调整\n    ])\n    def test_add_enterprise_category(self, payload, expected_code):\n        url = f\"{BASE_URL}/whiskerguardregulatoryservice/api/enterprise/categories/create\"\n        with allure.step(\"发送添加企业内部法规分类请求\"):\n            response = requests.post(url, json=payload)\n        with allure.step(\"断言响应状态码和返回字段\"):\n>           assert response.status_code == expected_code\nE           assert 405 == 500\nE            +  where 405 = <Response [405]>.status_code\n\ntest_enterprise_category.py:25: AssertionError"}, "steps": [{"name": "发送添加企业内部法规分类请求", "status": "passed", "start": 1745804611845, "stop": 1745804611892}, {"name": "断言响应状态码和返回字段", "status": "failed", "statusDetails": {"message": "AssertionError: assert 405 == 500\n +  where 405 = <Response [405]>.status_code\n", "trace": "  File \"C:\\Users\\piliz\\AI_test_platform\\test_enterprise_category.py\", line 25, in test_add_enterprise_category\n    assert response.status_code == expected_code\n"}, "start": 1745804611892, "stop": 1745804611892}], "parameters": [{"name": "payload", "value": "{'tenantId': 9007199254740991, 'categoryName': '123456', 'parentId': None, 'description': '123456', 'createdAt': '2025-04-27T10:10:23.864Z', 'updatedAt': '2025-04-27T10:10:23.864Z'}"}, {"name": "expected_code", "value": "500"}], "start": 1745804611845, "stop": 1745804611893, "uuid": "727f4903-5897-4e3e-bc39-6d71af01b27c", "historyId": "9878c7b9a4939067e0e2d7903efe86e3", "testCaseId": "3a26a95581ef29cba13271632dbfd3f4", "fullName": "test_enterprise_category.TestEnterpriseCategory#test_add_enterprise_category", "labels": [{"name": "feature", "value": "法律法规管理服务-企业内部制度类别"}, {"name": "story", "value": "添加企业内部法规分类"}, {"name": "suite", "value": "test_enterprise_category"}, {"name": "subSuite", "value": "TestEnterpriseCategory"}, {"name": "host", "value": "PILIZHEN"}, {"name": "thread", "value": "28416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_enterprise_category"}]}