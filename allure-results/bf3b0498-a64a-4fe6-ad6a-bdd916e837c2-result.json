{"name": "test_update_enterprise_category[1-payload0-200]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 405 == 200\n +  where 405 = <Response [405]>.status_code", "trace": "self = <test_enterprise_category.TestEnterpriseCategory object at 0x00000181A4A53610>\ncategory_id = 1\npayload = {'categoryName': '基本管理制度11', 'createdAt': '2025-04-28T01:14:07.043Z', 'description': '基本管理制度11', 'id': 1, ...}\nexpected_code = 200\n\n    @allure.story(\"更新企业内部法规分类\")\n    @pytest.mark.parametrize(\"category_id, payload, expected_code\", [\n        (\n            1,\n            {\n                \"id\": 1,\n                \"tenantId\": 9007199254740991,\n                \"categoryName\": \"基本管理制度11\",\n                \"description\": \"基本管理制度11\",\n                \"createdAt\": \"2025-04-28T01:14:07.043Z\",\n                \"updatedAt\": \"2025-04-28T01:14:07.043Z\"\n            },\n            200\n        )\n    ])\n    def test_update_enterprise_category(self, category_id, payload, expected_code):\n        url = f\"{BASE_URL}/whiskerguardregulatoryservice/api/enterprise/categories/update/{category_id}\"\n        with allure.step(\"发送更新企业内部法规分类请求\"):\n            response = requests.post(url, json=payload)\n        with allure.step(\"断言响应状态码和返回字段\"):\n>           assert response.status_code == expected_code\nE           assert 405 == 200\nE            +  where 405 = <Response [405]>.status_code\n\ntest_enterprise_category.py:48: AssertionError"}, "steps": [{"name": "发送更新企业内部法规分类请求", "status": "passed", "start": 1745804692874, "stop": 1745804692912}, {"name": "断言响应状态码和返回字段", "status": "failed", "statusDetails": {"message": "AssertionError: assert 405 == 200\n +  where 405 = <Response [405]>.status_code\n", "trace": "  File \"C:\\Users\\piliz\\AI_test_platform\\test_enterprise_category.py\", line 48, in test_update_enterprise_category\n    assert response.status_code == expected_code\n"}, "start": 1745804692912, "stop": 1745804692912}], "parameters": [{"name": "category_id", "value": "1"}, {"name": "payload", "value": "{'id': 1, 'tenantId': 9007199254740991, 'categoryName': '基本管理制度11', 'description': '基本管理制度11', 'createdAt': '2025-04-28T01:14:07.043Z', 'updatedAt': '2025-04-28T01:14:07.043Z'}"}, {"name": "expected_code", "value": "200"}], "start": 1745804692874, "stop": 1745804692912, "uuid": "326fbda9-857a-41b4-a022-f21650964107", "historyId": "a8835c749b91eca647dfca9fcf60fc13", "testCaseId": "e10ada959e414dc4815ca9b797b82224", "fullName": "test_enterprise_category.TestEnterpriseCategory#test_update_enterprise_category", "labels": [{"name": "feature", "value": "法律法规管理服务-企业内部制度类别"}, {"name": "story", "value": "更新企业内部法规分类"}, {"name": "suite", "value": "test_enterprise_category"}, {"name": "subSuite", "value": "TestEnterpriseCategory"}, {"name": "host", "value": "PILIZHEN"}, {"name": "thread", "value": "26588-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_enterprise_category"}]}