{"name": "test_add_enterprise_category[payload0-200]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 405 == 200\n +  where 405 = <Response [405]>.status_code", "trace": "self = <test_api.TestEnterpriseCategory object at 0x000001ECC852EE90>, payload = {}\nexpected_code = 200\n\n    @allure.story(\"添加企业内部法规分类\")\n    @pytest.mark.parametrize(\"payload, expected_code\", [({}, 200)])  # 可扩展更多用例\n    def test_add_enterprise_category(self, payload, expected_code):\n        url = f\"{BASE_URL}/whiskerguardregulatoryservice/api/enterprise/categories/create\"\n        with allure.step(\"发送添加企业内部法规分类请求\"):\n            response = requests.post(url, json=payload)\n        with allure.step(\"断言响应状态码和返回字段\"):\n>           assert response.status_code == expected_code\nE           assert 405 == 200\nE            +  where 405 = <Response [405]>.status_code\n\ntest_api.py:21: AssertionError"}, "steps": [{"name": "发送添加企业内部法规分类请求", "status": "passed", "start": 1745746623049, "stop": 1745746623092}, {"name": "断言响应状态码和返回字段", "status": "failed", "statusDetails": {"message": "AssertionError: assert 405 == 200\n +  where 405 = <Response [405]>.status_code\n", "trace": "  File \"C:\\Users\\piliz\\AI_test_platform\\test_api.py\", line 21, in test_add_enterprise_category\n    assert response.status_code == expected_code\n"}, "start": 1745746623092, "stop": 1745746623092}], "parameters": [{"name": "payload", "value": "{}"}, {"name": "expected_code", "value": "200"}], "start": 1745746623049, "stop": 1745746623093, "uuid": "5516f0d4-7efb-4b69-885b-1329e8b8aa8f", "historyId": "6e52f1436da80eb91f1a5f66fed45dd2", "testCaseId": "0bf5aaea194e24e64c47c541e19afec8", "fullName": "test_api.TestEnterpriseCategory#test_add_enterprise_category", "labels": [{"name": "story", "value": "添加企业内部法规分类"}, {"name": "feature", "value": "法律法规管理服务-企业内部制度类别"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestEnterpriseCategory"}, {"name": "host", "value": "PILIZHEN"}, {"name": "thread", "value": "29644-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}